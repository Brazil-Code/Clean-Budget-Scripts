CREATE TABLE BUDGET (
    ID SERIAL,
    SERVICE VARCHAR (100) NOT NULL,
    BUDGETED FLOAT NOT NULL,
    EFFECTIVE FLOAT NOT NULL,
    MANAGEMENT_ACCOUNT VARCHAR (100) NOT NULL,
    YEAR VARCHAR (4) NOT NULL,
    DISABLED BOOLEAN NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP,
    CONSTRAINT PK_BUDGET PRIMARY KEY (ID)
);

ALTER TABLE BUDGET ALTER COLUMN DISABLED SET DEFAULT FALSE;
ALTER SEQUENCE budget_id_seq RENAME TO budget_seq;

COMMENT ON TABLE BUDGET IS 'Tabela de Budgets';
COMMENT ON COLUMN BUDGET.ID IS 'ID da tabela';
COMMENT ON COLUMN BUDGET.SERVICE IS 'Tipo de serviço prestado';
COMMENT ON COLUMN BUDGET.BUDGETED IS 'Valor orçamentado';
COMMENT ON COLUMN BUDGET.EFFECTIVE IS 'Valor efetivado';
COMMENT ON COLUMN BUDGET.MANAGEMENT_ACCOUNT IS 'Conta de gerenciamento';
COMMENT ON COLUMN BUDGET.YEAR IS 'Ano';
COMMENT ON COLUMN BUDGET.DISABLED IS 'Orçamento desabilitado - 0: FALSE; 1: TRUE - DEFAULT 0';
COMMENT ON COLUMN BUDGET.CREATED_AT IS 'Data e hora de criação';
COMMENT ON COLUMN BUDGET.UPDATED_AT IS 'Data e hora da ultima alteração';

CREATE TABLE AREA (
    ID SERIAL,
    ID_BUDGET INT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DISABLED BOOLEAN NOT NULL,
    CONSTRAINT PK_AREA PRIMARY KEY (ID),
    CONSTRAINT FK_AREA_BUDGET FOREIGN KEY (ID_BUDGET) REFERENCES BUDGET (ID)
);

ALTER TABLE AREA ALTER COLUMN DISABLED SET DEFAULT FALSE;
ALTER SEQUENCE area_id_seq RENAME TO area_seq;

COMMENT ON TABLE AREA IS 'Tabela de Áreas da empresa';
COMMENT ON COLUMN AREA.ID IS 'ID da tabela';
COMMENT ON COLUMN AREA.ID_BUDGET IS 'ID do budget da área';
COMMENT ON COLUMN AREA.NAME IS 'Nome da área';
COMMENT ON COLUMN AREA.DISABLED IS 'Area desabilitada - 0: FALSE; 1: TRUE - DEFAULT 0';

CREATE TABLE SYS_USER (
    ID SERIAL,
    ID_AREA INT NOT NULL,
    USERNAME VARCHAR (50) NOT NULL,
    PASSWORD VARCHAR (50) NOT NULL,
    FIRST_NAME VARCHAR (30) NOT NULL,
    LAST_NAME VARCHAR (30),
    EMAIL VARCHAR (100),
    DISABLED BOOLEAN NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP,
    CONSTRAINT PK_USER PRIMARY KEY (ID),
    CONSTRAINT FK_USER_AREA FOREIGN KEY (ID_AREA) REFERENCES AREA (ID),
    CONSTRAINT UK_USER_USERNAME UNIQUE (USERNAME)
);

ALTER TABLE SYS_USER ALTER COLUMN DISABLED SET DEFAULT FALSE;
ALTER SEQUENCE sys_user_id_seq RENAME TO sys_user_seq;

COMMENT ON TABLE SYS_USER IS 'Tabela de Usuários do sistema';
COMMENT ON COLUMN SYS_USER.ID IS 'Id do usuário';
COMMENT ON COLUMN SYS_USER.ID_AREA IS 'Id da área do usuário';
COMMENT ON COLUMN SYS_USER.USERNAME IS 'Nome do Login';
COMMENT ON COLUMN SYS_USER.PASSWORD IS 'Senha do Login';
COMMENT ON COLUMN SYS_USER.FIRST_NAME IS 'Primeiro nome';
COMMENT ON COLUMN SYS_USER.LAST_NAME IS 'Último nome';
COMMENT ON COLUMN SYS_USER.EMAIL IS 'Email do usuário';
COMMENT ON COLUMN SYS_USER.DISABLED IS 'Usuário desabilitado - 0: FALSE; 1: TRUE - DEFAULT 0';
COMMENT ON COLUMN SYS_USER.CREATED_AT IS 'Data e hora de criação';
COMMENT ON COLUMN SYS_USER.UPDATED_AT IS 'Data e hora da ultima alteração';

CREATE TABLE LOG (
    ID SERIAL,
    ID_USER INT NOT NULL,
    IP VARCHAR (20),
    DESCRIPTION VARCHAR(255) NOT NULL,
    TIMESTAMP timestamp,
    CONSTRAINT PK_LOG PRIMARY KEY (ID),
    CONSTRAINT FK_LOG_USER FOREIGN KEY (ID_USER) REFERENCES SYS_USER (ID)
 );

ALTER SEQUENCE log_id_seq RENAME TO log_seq;

COMMENT ON TABLE LOG IS 'Tabela de Logs';
COMMENT ON COLUMN LOG.ID IS 'Id do log';
COMMENT ON COLUMN LOG.ID_USER IS 'Id do Usuário';
COMMENT ON COLUMN LOG.IP IS 'Ip do usuário';
COMMENT ON COLUMN LOG.DESCRIPTION IS 'Descrição do Log';
COMMENT ON COLUMN LOG.TIMESTAMP IS 'Data e hora da inserção';

CREATE TABLE PROFILE (
    ID SERIAL,
    DESCRIPTION VARCHAR (50) NOT NULL,
    DISABLED BOOLEAN NOT NULL,
    CONSTRAINT PK_PROFILE PRIMARY KEY (ID)
);

ALTER TABLE PROFILE ALTER COLUMN DISABLED SET DEFAULT FALSE;
ALTER SEQUENCE profile_id_seq RENAME TO profile_seq;

COMMENT ON TABLE PROFILE IS 'Tabela de Perfis';
COMMENT ON COLUMN PROFILE.ID IS 'Id do Perfil';
COMMENT ON COLUMN PROFILE.DESCRIPTION IS 'Descrição do Perfil';
COMMENT ON COLUMN PROFILE.DISABLED IS 'Perfil desabilitado - 0: FALSE; 1: TRUE - DEFAULT 0';

CREATE TABLE USER_PROFILE (
    ID_USER INT NOT NULL,
    ID_PROFILE INT NOT NULL,
    CONSTRAINT PK_USER_PROFILE PRIMARY KEY (ID_USER, ID_PROFILE),
    CONSTRAINT FK_USER_PROFILE_USER FOREIGN KEY (ID_USER) REFERENCES SYS_USER (ID),
    CONSTRAINT FK_USER_PROFILE_PROFILE FOREIGN KEY (ID_PROFILE) REFERENCES PROFILE (ID)
);

COMMENT ON TABLE USER_PROFILE IS 'Tabela de Relação Usuário x Perfil';
COMMENT ON COLUMN USER_PROFILE.ID_USER IS 'Id do Usuário';
COMMENT ON COLUMN USER_PROFILE.ID_PROFILE IS 'Id do Perfil';

CREATE TABLE FUNCTIONALITY (
    ID SERIAL,
    DESCRIPTION VARCHAR (50) NOT NULL,
    URI VARCHAR (150) NOT NULL,
    ACTION INT,
    DISABLED BOOLEAN NOT NULL,
    CONSTRAINT PK_FUNCTIONALITY PRIMARY KEY (ID)
);

ALTER TABLE FUNCTIONALITY ALTER COLUMN DISABLED SET DEFAULT FALSE;
ALTER SEQUENCE functionality_id_seq RENAME TO functionality_seq;

COMMENT ON TABLE FUNCTIONALITY IS 'Tabela de Funcionalidades';
COMMENT ON COLUMN FUNCTIONALITY.ID IS 'Id da Funcionalidade';
COMMENT ON COLUMN FUNCTIONALITY.DESCRIPTION IS 'Descrição da Funcionalidade';
COMMENT ON COLUMN FUNCTIONALITY.URI IS 'Link de acesso web';
COMMENT ON COLUMN FUNCTIONALITY.ACTION IS 'Tipo de ação';
COMMENT ON COLUMN FUNCTIONALITY.DISABLED IS 'Funcionalidade desabilitada - 0: FALSE; 1: TRUE - DEFAULT 0';

CREATE TABLE PROFILE_FUNCTIONALITY (
    ID_PROFILE INT NOT NULL,
    ID_FUNCTIONALITY INT NOT NULL,
    CONSTRAINT PK_PROFILE_FUNCTIONALITY PRIMARY KEY (ID_PROFILE, ID_FUNCTIONALITY),
    CONSTRAINT FK_PROFILE_FUNCTIONALITY_PROFILE FOREIGN KEY (ID_PROFILE) REFERENCES PROFILE (ID),
    CONSTRAINT FK_PROFILE_FUNCTIONALITY_FUNCTIONALITY FOREIGN KEY (ID_FUNCTIONALITY) REFERENCES FUNCTIONALITY (ID)
);

COMMENT ON TABLE PROFILE_FUNCTIONALITY IS 'Tabela de Relação Perfil x Funcionalidade';
COMMENT ON COLUMN PROFILE_FUNCTIONALITY.ID_PROFILE IS 'Id do Perfil';
COMMENT ON COLUMN PROFILE_FUNCTIONALITY.ID_FUNCTIONALITY IS 'Id da Funcionalidade';

CREATE TABLE PURCHASE_REQUEST(
        ID SERIAL,
        ID_CREATE_USER INT NOT NULL,
        ID_MANAGER INT NOT NULL,
        OBSERVATION VARCHAR(255),
        STATUS INT NOT NULL,
        CREATED_AT TIMESTAMP NOT NULL,
        UPDATED_AT TIMESTAMP,
        CONSTRAINT PK_PURCHASE_REQUEST PRIMARY KEY(ID),
        CONSTRAINT FK_PURCHASE_REQUEST_CREATE_USER FOREIGN KEY (ID_CREATE_USER) REFERENCES SYS_USER (ID),
        CONSTRAINT FK_PURCHASE_REQUEST_MANAGER FOREIGN KEY (ID_MANAGER) REFERENCES SYS_USER (ID)
);

ALTER SEQUENCE purchase_request_id_seq RENAME TO purchase_request_seq;

COMMENT ON TABLE PURCHASE_REQUEST IS 'Tabela de Pedido de Compra';
COMMENT ON COLUMN PURCHASE_REQUEST.ID IS 'Id do Pedido de Compra';
COMMENT ON COLUMN PURCHASE_REQUEST.ID_CREATE_USER IS 'Id do Usuário de criação';
COMMENT ON COLUMN PURCHASE_REQUEST.ID_MANAGER IS 'Id do Usuário de aprovação';
COMMENT ON COLUMN PURCHASE_REQUEST.OBSERVATION IS 'Observação';
COMMENT ON COLUMN PURCHASE_REQUEST.STATUS IS 'Status do Pedido';
COMMENT ON COLUMN PURCHASE_REQUEST.CREATED_AT IS 'Data e hora de criação';
COMMENT ON COLUMN PURCHASE_REQUEST.UPDATED_AT IS 'Data e hora da ultima alteração';

CREATE TABLE PRICE_QUOTATION(
    ID SERIAL,
    PURCHASE_ITEM VARCHAR(150) NOT NULL,
    LINK VARCHAR(255) NOT NULL,
    TOTAL_VALUE FLOAT NOT NULL,
    UNIT_VALUE FLOAT NOT NULL,
    AMOUNT FLOAT NOT NULL,
    CONSTRAINT PK_PRICE_QUOTATION PRIMARY KEY (ID)
);

ALTER SEQUENCE price_quotation_id_seq RENAME TO price_quotation_seq;

COMMENT ON TABLE PRICE_QUOTATION IS 'Tabela de Cotações';
COMMENT ON COLUMN PRICE_QUOTATION.ID IS 'Id da Cotação';
COMMENT ON COLUMN PRICE_QUOTATION.PURCHASE_ITEM IS 'Descrição do item cotado';
COMMENT ON COLUMN PRICE_QUOTATION.LINK IS 'Link do site cotado';
COMMENT ON COLUMN PRICE_QUOTATION.TOTAL_VALUE IS 'Valor total da Cotação';
COMMENT ON COLUMN PRICE_QUOTATION.UNIT_VALUE IS 'Valor unitário do item';
COMMENT ON COLUMN PRICE_QUOTATION.AMOUNT IS 'Quantidade de itens cotados';

CREATE TABLE PURCHASE_REQUEST_PRICE_QUOTATION(
  ID_PURCHASE_REQUEST INT NOT NULL,
  ID_PRICE_QUOTATION INT NOT NULL,
  CONSTRAINT PK_PURCHASE_REQUEST_PRICE_QUOTATION PRIMARY KEY (ID_PURCHASE_REQUEST,ID_PRICE_QUOTATION),
  CONSTRAINT FK_PURCHASE_REQUEST_PRICE_QUOTATION_PURCHASE_REQUEST FOREIGN KEY (ID_PURCHASE_REQUEST) REFERENCES PURCHASE_REQUEST (ID),
  CONSTRAINT FK_PURCHASE_REQUEST_PRICE_QUOTATION_PRICE_QUOTATION FOREIGN KEY (ID_PRICE_QUOTATION) REFERENCES PRICE_QUOTATION (ID)
);

COMMENT ON TABLE PURCHASE_REQUEST_PRICE_QUOTATION IS 'Tabela de Relação Pedido de Compra x Cotação';
COMMENT ON COLUMN PURCHASE_REQUEST_PRICE_QUOTATION.ID_PURCHASE_REQUEST IS 'Id do Pedido de Compra';
COMMENT ON COLUMN PURCHASE_REQUEST_PRICE_QUOTATION.ID_PRICE_QUOTATION IS 'Id da Cotação';

CREATE TABLE SUPPLIER(
    ID SERIAL,
    CNPJ VARCHAR(20) NOT NULL,
    CORPORATE_NAME VARCHAR(150) NOT NULL,
    FANCY_NAME VARCHAR(50),
    STATE_REGISTRATION VARCHAR(30) NOT NULL,
    RESPONSIBLE VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(150) NOT NULL,
    PHONE VARCHAR(15) NOT NULL,
    DISABLED BOOLEAN NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP,
    CONSTRAINT PK_SUPPLIER PRIMARY KEY (ID)
);

ALTER TABLE SUPPLIER ALTER COLUMN DISABLED SET DEFAULT FALSE;
ALTER SEQUENCE supplier_id_seq RENAME TO supplier_seq;

COMMENT ON TABLE SUPPLIER IS 'Tabela de Fornecedores';
COMMENT ON COLUMN SUPPLIER.ID IS 'Id do Fornecedor';
COMMENT ON COLUMN SUPPLIER.CNPJ IS 'CNPJ da Fornecedor';
COMMENT ON COLUMN SUPPLIER.CORPORATE_NAME IS 'Nome do Fornecedor';
COMMENT ON COLUMN SUPPLIER.FANCY_NAME IS 'Razão Social do Fornecedor';
COMMENT ON COLUMN SUPPLIER.STATE_REGISTRATION IS 'Estado de registro';
COMMENT ON COLUMN SUPPLIER.RESPONSIBLE IS 'Responável pelo contato';
COMMENT ON COLUMN SUPPLIER.EMAIL IS 'Email do Fornecedor';
COMMENT ON COLUMN SUPPLIER.PHONE IS 'Telefone do Fornecedor';
COMMENT ON COLUMN SUPPLIER.DISABLED IS 'Fornecedor desabilitado - 0: FALSE; 1: TRUE - DEFAULT 0';
COMMENT ON COLUMN SUPPLIER.CREATED_AT IS 'Data e hora de criação';
COMMENT ON COLUMN SUPPLIER.UPDATED_AT IS 'Data e hora da ultima alteração';

CREATE TABLE PAYMENT_ORDER(
    ID SERIAL,
    ID_PURCHASE_REQUEST INT NOT NULL,
    ID_AREA INT NOT NULL,
    ID_SUPPLIER INT NOT NULL,
    DATE TIMESTAMP NOT NULL,
    VALUE FLOAT NOT NULL,
    INVOICE_NUMBER INT NOT NULL,
    INVOICE_PATH VARCHAR(150) NOT NULL,
    DISABLED BOOLEAN NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP,
    CONSTRAINT PK_PAYMENT_ORDER PRIMARY KEY (ID),
    CONSTRAINT FK_PAYMENT_ORDER_PURCHASE_REQUEST FOREIGN KEY (ID_PURCHASE_REQUEST) REFERENCES PURCHASE_REQUEST (ID),
    CONSTRAINT FK_PAYMENT_ORDER_AREA FOREIGN KEY (ID_AREA) REFERENCES AREA (ID),
    CONSTRAINT FK_PAYMENT_ORDER_SUPPLIER FOREIGN KEY (ID_SUPPLIER) REFERENCES SUPPLIER (ID)
);

ALTER TABLE PAYMENT_ORDER ALTER COLUMN DISABLED SET DEFAULT FALSE;
ALTER SEQUENCE payment_order_id_seq RENAME TO payment_order_seq;

COMMENT ON TABLE PAYMENT_ORDER IS 'Tabela de Ordem de Pagamento';
COMMENT ON COLUMN PAYMENT_ORDER.ID IS 'Id da Ordem de Pagamento';
COMMENT ON COLUMN PAYMENT_ORDER.ID_PURCHASE_REQUEST IS 'Id do Pedido de Compra';
COMMENT ON COLUMN PAYMENT_ORDER.ID_AREA IS 'Id da Área';
COMMENT ON COLUMN PAYMENT_ORDER.ID_SUPPLIER IS 'Id do Fornecedor';
COMMENT ON COLUMN PAYMENT_ORDER.DATE IS 'Data da Ordem';
COMMENT ON COLUMN PAYMENT_ORDER.VALUE IS 'Valor da Ordem';
COMMENT ON COLUMN PAYMENT_ORDER.INVOICE_NUMBER IS 'Número da fatura';
COMMENT ON COLUMN PAYMENT_ORDER.INVOICE_PATH IS 'Path da fatura';
COMMENT ON COLUMN PAYMENT_ORDER.DISABLED IS 'Ordem de Pagamento desabilitada - 0: FALSE; 1: TRUE - DEFAULT 0';
COMMENT ON COLUMN PAYMENT_ORDER.CREATED_AT IS 'Data e hora de criação';
COMMENT ON COLUMN PAYMENT_ORDER.UPDATED_AT IS 'Data e hora da ultima alteração';

CREATE TABLE PAYMENT_ORDER_HISTORIC(
    ID SERIAL,
    ID_PAYMENT_ORDER INT NOT NULL,
    OBSERVATION VARCHAR(255),
    CREATED_AT TIMESTAMP NOT NULL,
    CONSTRAINT PK_PAYMENT_ORDER_HISTORIC PRIMARY KEY (ID),
    CONSTRAINT FK_PAYMENT_ORDER_HISTORIC_PAYMENT_ORDER FOREIGN KEY (ID_PAYMENT_ORDER) REFERENCES PAYMENT_ORDER (ID)
);

ALTER SEQUENCE payment_order_historic_id_seq RENAME TO payment_order_historic_seq;

COMMENT ON TABLE PAYMENT_ORDER_HISTORIC IS 'Tabela de Histórico de Pagamento';
COMMENT ON COLUMN PAYMENT_ORDER_HISTORIC.ID IS 'Id do Histórico';
COMMENT ON COLUMN PAYMENT_ORDER_HISTORIC.ID_PAYMENT_ORDER IS 'Id da Ordem de Pagamento';
COMMENT ON COLUMN PAYMENT_ORDER_HISTORIC.OBSERVATION IS 'Observação';
COMMENT ON COLUMN PAYMENT_ORDER_HISTORIC.CREATED_AT IS 'Data e hora de criação';