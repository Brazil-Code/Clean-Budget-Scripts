CREATE TABLE BUDGET (
    ID SERIAL,
    SERVICE_TYPE VARCHAR (100) NOT NULL,
    BUDGETED FLOAT NOT NULL,
    EFFECTIVE FLOAT NOT NULL,
    MANAGEMENT_ACCOUNT VARCHAR (100) NOT NULL,
    DEPARTMENT VARCHAR (50) NOT NULL,
    YEAR VARCHAR (4) NOT NULL,
    DISABLED BOOLEAN NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP,
    CONSTRAINT PK_BUDGET PRIMARY KEY (ID)
);

ALTER TABLE BUDGET ALTER COLUMN DISABLED SET DEFAULT FALSE;

COMMENT ON TABLE BUDGET IS 'Tabela de Budgets';
COMMENT ON COLUMN BUDGET.ID IS 'ID da tabela';
COMMENT ON COLUMN BUDGET.SERVICE_TYPE IS 'Tipo de serviço prestado';
COMMENT ON COLUMN BUDGET.BUDGETED IS 'Valor orçamentado';
COMMENT ON COLUMN BUDGET.EFFECTIVE IS 'Valor efetivado';
COMMENT ON COLUMN BUDGET.MANAGEMENT_ACCOUNT IS 'Conta de gerenciamento';
COMMENT ON COLUMN BUDGET.DEPARTMENT IS 'Departamento';
COMMENT ON COLUMN BUDGET.YEAR IS 'Ano';
COMMENT ON COLUMN BUDGET.DISABLED IS 'Orçamento desabilitado - 0: FALSE; 1: TRUE - DEFAULT 0';
COMMENT ON COLUMN BUDGET.CREATED_AT IS 'Data e hora de criação';
COMMENT ON COLUMN BUDGET.UPDATED_AT IS 'Data e hora da ultima alteração';

CREATE TABLE AREA (
    ID SERIAL,
    ID_BUDGET INT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DISABLED BOOLEAN NOT NULL,
    CONSTRAINT PK_AREA PRIMARY KEY (ID),
    CONSTRAINT FK_AREA_BUDGET FOREIGN KEY (ID_BUDGET) REFERENCES BUDGET (ID)
);

ALTER TABLE AREA ALTER COLUMN DISABLED SET DEFAULT FALSE;

COMMENT ON TABLE AREA IS 'Tabela de Áreas da empresa';
COMMENT ON COLUMN AREA.ID IS 'ID da tabela';
COMMENT ON COLUMN AREA.ID_BUDGET IS 'ID do budget da área';
COMMENT ON COLUMN AREA.NAME IS 'Nome da área';
COMMENT ON COLUMN AREA.DISABLED IS 'Area desabilitada - 0: FALSE; 1: TRUE - DEFAULT 0';

CREATE TABLE "USER" (
    ID SERIAL,
    ID_AREA INT NOT NULL,
    USERNAME VARCHAR (50) NOT NULL,
    PASSWORD VARCHAR (50) NOT NULL,
    FIRST_NAME VARCHAR (30) NOT NULL,
    LAST_NAME VARCHAR (30),
    EMAIL VARCHAR (100),
    TOKEN TEXT,
    DISABLED BOOLEAN NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP,
    CONSTRAINT PK_USER PRIMARY KEY (ID),
    CONSTRAINT FK_USER_AREA FOREIGN KEY (ID_AREA) REFERENCES AREA (ID),
    CONSTRAINT UK_USER_USERNAME UNIQUE (USERNAME)
);

ALTER TABLE "USER" ALTER COLUMN DISABLED SET DEFAULT FALSE;

COMMENT ON TABLE "USER" IS 'Tabela de Usuários do sistema';
COMMENT ON COLUMN "USER".ID IS 'Id do usuário';
COMMENT ON COLUMN "USER".ID_AREA IS 'Id da área do usuário';
COMMENT ON COLUMN "USER".USERNAME IS 'Nome do Login';
COMMENT ON COLUMN "USER".PASSWORD IS 'Senha do Login';
COMMENT ON COLUMN "USER".FIRST_NAME IS 'Primeiro nome';
COMMENT ON COLUMN "USER".LAST_NAME IS 'Último nome';
COMMENT ON COLUMN "USER".EMAIL IS 'Email do usuário';
COMMENT ON COLUMN "USER".TOKEN IS 'Token de acesso';
COMMENT ON COLUMN "USER".DISABLED IS 'Usuário desabilitado - 0: FALSE; 1: TRUE - DEFAULT 0';
COMMENT ON COLUMN "USER".CREATED_AT IS 'Data e hora de criação';
COMMENT ON COLUMN "USER".UPDATED_AT IS 'Data e hora da ultima alteração';

CREATE TABLE LOG (
    ID SERIAL,
    ID_USER INT NOT NULL,
    IP VARCHAR (20),
    DESCRIPTION VARCHAR(255) NOT NULL,
    CONSTRAINT PK_LOG PRIMARY KEY (ID),
    CONSTRAINT FK_LOG_USER FOREIGN KEY (ID_USER) REFERENCES "USER" (ID)
 );

COMMENT ON TABLE LOG IS 'Tabela de Logs';
COMMENT ON COLUMN LOG.ID IS 'Id do log';
COMMENT ON COLUMN LOG.ID_USER IS 'Id do Usuário';
COMMENT ON COLUMN LOG.IP IS 'Ip do usuário';
COMMENT ON COLUMN LOG.DESCRIPTION IS 'Descrição do Log';

CREATE TABLE PROFILE (
    ID SERIAL,
    DESCRIPTION VARCHAR (50) NOT NULL,
    DISABLED BOOLEAN NOT NULL,
    CONSTRAINT PK_PROFILE PRIMARY KEY (ID)
);

ALTER TABLE PROFILE ALTER COLUMN DISABLED SET DEFAULT FALSE;

COMMENT ON TABLE PROFILE IS 'Tabela de Perfis';
COMMENT ON COLUMN PROFILE.ID IS 'Id do Perfil';
COMMENT ON COLUMN PROFILE.DESCRIPTION IS 'Descrição do Perfil';
COMMENT ON COLUMN PROFILE.DISABLED IS 'Perfil desabilitado - 0: FALSE; 1: TRUE - DEFAULT 0';

CREATE TABLE USER_PROFILE (
    ID_USER INT NOT NULL,
    ID_PROFILE INT NOT NULL,
    CONSTRAINT PK_USER_PROFILE PRIMARY KEY (ID_USER, ID_PROFILE),
    CONSTRAINT FK_USER_PROFILE_PROFILE FOREIGN KEY (ID_PROFILE) REFERENCES PROFILE (ID),
    CONSTRAINT FK_USER_PROFILE_USER FOREIGN KEY (ID_USER) REFERENCES "USER" (ID)
);

COMMENT ON TABLE USER_PROFILE IS 'Tabela de Relação Usuário x Perfil';
COMMENT ON COLUMN USER_PROFILE.ID_USER IS 'Id do Usuário';
COMMENT ON COLUMN USER_PROFILE.ID_PROFILE IS 'Id do Perfil';

CREATE TABLE FUNCTIONALITY (
    ID SERIAL,
    DESCRIPTION VARCHAR (50) NOT NULL,
    URI VARCHAR (150) NOT NULL,
    ACTION INT,
    DISABLED BOOLEAN NOT NULL,
    CONSTRAINT PK_FUNCTIONALITY PRIMARY KEY (ID)
);

ALTER TABLE FUNCTIONALITY ALTER COLUMN DISABLED SET DEFAULT FALSE;

COMMENT ON TABLE FUNCTIONALITY IS 'Tabela de Funcionalidades';
COMMENT ON COLUMN FUNCTIONALITY.ID IS 'Id da Funcionalidade';
COMMENT ON COLUMN FUNCTIONALITY.DESCRIPTION IS 'Descrição da Funcionalidade';
COMMENT ON COLUMN FUNCTIONALITY.URI IS 'Link de acesso web';
COMMENT ON COLUMN FUNCTIONALITY.ACTION IS 'Tipo de ação';
COMMENT ON COLUMN FUNCTIONALITY.DISABLED IS 'Funcionalidade desabilitada - 0: FALSE; 1: TRUE - DEFAULT 0';

CREATE TABLE PROFILE_FUNCTIONALITY (
    ID_PROFILE INT NOT NULL,
    ID_FUNCTIONALITY INT NOT NULL,
    CONSTRAINT PK_PROFILE_FUNCTIONALITY PRIMARY KEY (ID_PROFILE, ID_FUNCTIONALITY),
    CONSTRAINT FK_PROFILE_FUNCTIONALITY_PROFILE FOREIGN KEY (ID_PROFILE) REFERENCES PROFILE (ID),
    CONSTRAINT FK_PROFILE_FUNCTIONALITY_FUNCTIONALITY FOREIGN KEY (ID_FUNCTIONALITY) REFERENCES FUNCTIONALITY (ID)
);

COMMENT ON TABLE PROFILE_FUNCTIONALITY IS 'Tabela de Relação Perfil x Funcionalidade';
COMMENT ON COLUMN PROFILE_FUNCTIONALITY.ID_PROFILE IS 'Id do Perfil';
COMMENT ON COLUMN PROFILE_FUNCTIONALITY.ID_FUNCTIONALITY IS 'Id da Funcionalidade';

CREATE TABLE PURCHASE_ORDER(
        ID SERIAL,
        CREATE_USER INT NOT NULL,
        APPROVAL_USER INT NOT NULL,
        OBSERVATION VARCHAR(255),
        STATUS INT NOT NULL,
        CREATED_AT TIMESTAMP NOT NULL,
        UPDATED_AT TIMESTAMP,
        CONSTRAINT PK_PURCHASE_ORDER PRIMARY KEY(ID),
        CONSTRAINT FK_PURCHASE_ORDER_CREATE_USER FOREIGN KEY (CREATE_USER) REFERENCES "USER" (ID),
        CONSTRAINT FK_PURCHASE_ORDER_APPROVAL_USER FOREIGN KEY (APPROVAL_USER) REFERENCES "USER" (ID)
);

COMMENT ON TABLE PURCHASE_ORDER IS 'Tabela de Ordem de Compra';
COMMENT ON COLUMN PURCHASE_ORDER.ID IS 'Id da Ordem de Compra';
COMMENT ON COLUMN PURCHASE_ORDER.CREATE_USER IS 'Id do Usuário de criação';
COMMENT ON COLUMN PURCHASE_ORDER.APPROVAL_USER IS 'Id do Usuário de aprovação';
COMMENT ON COLUMN PURCHASE_ORDER.OBSERVATION IS 'Observação';
COMMENT ON COLUMN PURCHASE_ORDER.STATUS IS 'Status da Ordem';
COMMENT ON COLUMN "USER".CREATED_AT IS 'Data e hora de criação';
COMMENT ON COLUMN "USER".UPDATED_AT IS 'Data e hora da ultima alteração';

CREATE TABLE PURCHASE_PRICE(
    ID SERIAL,
    ID_PURCHASE_ORDER INT NOT NULL,
    COMPANY VARCHAR(150) NOT NULL,
    VALUE FLOAT NOT NULL,
    TYPE VARCHAR(30) NOT NULL,
    STATUS BOOLEAN NOT NULL,
    CONSTRAINT PK_PURCHASE_PRICE PRIMARY KEY (ID),
    CONSTRAINT PK_PURCHASE_PRICE_PURCHASE_ORDER FOREIGN KEY (ID_PURCHASE_ORDER) REFERENCES PURCHASE_ORDER (ID),
    CONSTRAINT UK_PURCHASE_PRICE_PURCHASE_ORDER UNIQUE (ID_PURCHASE_ORDER)
);

COMMENT ON TABLE PURCHASE_PRICE IS 'Tabela de Cotações';
COMMENT ON COLUMN PURCHASE_PRICE.ID IS 'Id da Cotação';
COMMENT ON COLUMN PURCHASE_PRICE.ID_PURCHASE_ORDER IS 'Id da Ordem de Compra';
COMMENT ON COLUMN PURCHASE_PRICE.COMPANY IS 'Nome da empresa';
COMMENT ON COLUMN PURCHASE_PRICE.VALUE IS 'Valor da Cotação';
COMMENT ON COLUMN PURCHASE_PRICE.TYPE IS 'Tipo de Cotação';
COMMENT ON COLUMN PURCHASE_PRICE.STATUS IS 'Status da Cotação';

CREATE TABLE COMPANY(
    ID SERIAL,
    CNPJ VARCHAR(15) NOT NULL,
    CORPORATE_NAME VARCHAR(150) NOT NULL,
    FANCY_NAME VARCHAR(50),
    STATE_REGISTRATION VARCHAR(30) NOT NULL,
    RESPONSIBLE VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(150) NOT NULL,
    PHONE VARCHAR(15) NOT NULL,
    DISABLED BOOLEAN NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP,
    CONSTRAINT PK_COMPANY PRIMARY KEY (ID)
);

ALTER TABLE COMPANY ALTER COLUMN DISABLED SET DEFAULT FALSE;

COMMENT ON TABLE COMPANY IS 'Tabela de Empresas';
COMMENT ON COLUMN COMPANY.ID IS 'Id da Empresa';
COMMENT ON COLUMN COMPANY.CNPJ IS 'CNPJ da Empresa';
COMMENT ON COLUMN COMPANY.CORPORATE_NAME IS 'Nome da Empresa';
COMMENT ON COLUMN COMPANY.FANCY_NAME IS 'Razão Social da Empresa';
COMMENT ON COLUMN COMPANY.STATE_REGISTRATION IS 'Estado de registro';
COMMENT ON COLUMN COMPANY.RESPONSIBLE IS 'Responável pelo contato';
COMMENT ON COLUMN COMPANY.EMAIL IS 'Email da Empresa';
COMMENT ON COLUMN COMPANY.PHONE IS 'Telefone da Empresa';
COMMENT ON COLUMN COMPANY.DISABLED IS 'Empresa desabilitada - 0: FALSE; 1: TRUE - DEFAULT 0';
COMMENT ON COLUMN COMPANY.CREATED_AT IS 'Data e hora de criação';
COMMENT ON COLUMN COMPANY.UPDATED_AT IS 'Data e hora da ultima alteração';

CREATE TABLE PAYMENT_ORDER(
    ID SERIAL,
    ID_BUDGET INT NOT NULL,
    ID_PURCHASE_ORDER INT NOT NULL,
    ID_AREA INT NOT NULL,
    ID_COMPANY INT NOT NULL,
    ID_USER INT NOT NULL,
    DATE date NOT NULL,
    INVOICE_NUMBER INT NOT NULL,
    INVOICE_PATH VARCHAR(150) NOT NULL,
    DISABLED BOOLEAN NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP,
    CONSTRAINT PK_PAYMENT_ORDER PRIMARY KEY (ID),
    CONSTRAINT FK_PAYMENT_ORDER_BUDGET FOREIGN KEY (ID_BUDGET) REFERENCES BUDGET (ID),
    CONSTRAINT FK_PAYMENT_ORDER_PURCHASE_ORDER FOREIGN KEY (ID_PURCHASE_ORDER) REFERENCES PURCHASE_ORDER (ID),
    CONSTRAINT FK_PAYMENT_ORDER_AREA FOREIGN KEY (ID_AREA) REFERENCES AREA (ID),
    CONSTRAINT FK_PAYMENT_ORDER_COMPANY FOREIGN KEY (ID_COMPANY) REFERENCES COMPANY (ID),
    CONSTRAINT FK_PAYMENT_ORDER_USER FOREIGN KEY (ID_USER) REFERENCES "USER" (ID)
);

ALTER TABLE PAYMENT_ORDER ALTER COLUMN DISABLED SET DEFAULT FALSE;

COMMENT ON TABLE PAYMENT_ORDER IS 'Tabela de Ordem de Pagamento';
COMMENT ON COLUMN PAYMENT_ORDER.ID IS 'Id da Ordem de Pagamento';
COMMENT ON COLUMN PAYMENT_ORDER.ID_BUDGET IS 'Id do Budget';
COMMENT ON COLUMN PAYMENT_ORDER.ID_PURCHASE_ORDER IS 'Id da Ordem de Compra';
COMMENT ON COLUMN PAYMENT_ORDER.ID_AREA IS 'Id da Área';
COMMENT ON COLUMN PAYMENT_ORDER.ID_COMPANY IS 'Id da Empresa';
COMMENT ON COLUMN PAYMENT_ORDER.ID_USER IS 'Id do Usuário';
COMMENT ON COLUMN PAYMENT_ORDER.DATE IS 'Data da Ordem';
COMMENT ON COLUMN PAYMENT_ORDER.INVOICE_NUMBER IS 'Número da fatura';
COMMENT ON COLUMN PAYMENT_ORDER.INVOICE_PATH IS 'Path da fatura';
COMMENT ON COLUMN PAYMENT_ORDER.DISABLED IS 'Ordem de Pagamento desabilitada - 0: FALSE; 1: TRUE - DEFAULT 0';
COMMENT ON COLUMN PAYMENT_ORDER.CREATED_AT IS 'Data e hora de criação';
COMMENT ON COLUMN PAYMENT_ORDER.UPDATED_AT IS 'Data e hora da ultima alteração';

CREATE TABLE PAYMENT_ORDER_HISTORIC(
    ID SERIAL,
    ID_PAYMENT_ORDER INT NOT NULL,
    OBSERVATION VARCHAR(255),
    CREATED_AT TIMESTAMP NOT NULL,
    CONSTRAINT PK_PAYMENT_ORDER_HISTORIC PRIMARY KEY (ID),
    CONSTRAINT FK_PAYMENT_ORDER_HISTORIC_PAYMENT_ORDER FOREIGN KEY (ID_PAYMENT_ORDER) REFERENCES PAYMENT_ORDER (ID)
);

COMMENT ON TABLE PAYMENT_ORDER_HISTORIC IS 'Tabela de Histórico de Pagamento';
COMMENT ON COLUMN PAYMENT_ORDER_HISTORIC.ID IS 'Id do Histórico';
COMMENT ON COLUMN PAYMENT_ORDER_HISTORIC.ID_PAYMENT_ORDER IS 'Id da Ordem de Pagamento';
COMMENT ON COLUMN PAYMENT_ORDER_HISTORIC.OBSERVATION IS 'Observação';
COMMENT ON COLUMN PAYMENT_ORDER_HISTORIC.CREATED_AT IS 'Data e hora de criação';